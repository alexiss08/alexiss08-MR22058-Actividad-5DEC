section .data
    num1 dw 99        ; Define la variable num1 con valor 100 (en formato word)
    num2 dw 50        ; Define la variable num2 con valor 50 (en formato word)
    num3 dw 25        ; Define la variable num3 con valor 25 (en formato word)
    mensaje dw  'El resultado de la resta es:'
    len_mensaje equ $ - mensaje
    linea dw 0xA

section .bss
    resultado resw 3   ; Reserva espacio para almacenar el resultado de 2 words (16 bits)

section .text
global _start      ; Indica que _start es el punto de entrada del programa

_start:            ; Etiqueta de inicio del programa
    mov ax, [num1] ; Mueve el valor de num1 al registro ax
    sub ax, [num2] ; Resta el valor de num2 al registro ax
    sub ax, [num3] ; Resta el valor de num3 al registro ax

    ; Convertir el resultado a ASCII
    mov ah, 0        ; Limpiar registro AH
    mov bl, 10       ; Divisor para convertir a decimal
    div bl           ; Dividir AX por 10

    ; Convertir dígitos a ASCII y almacenarlos en la memoria
    add al, '0'      ; Convertir el dígito menos significativo a ASCII
    mov [resultado], al ; Almacenar el dígito en la memoria

    mov al, ah       ; Recuperar el valor original de AH
    add al, '0'      ; Convertir el dígito más significativo a ASCII
    mov [resultado + 1], al ; Almacenar el dígito en la memoria
    
    ;mostrar mensaje.
    mov eax, 4      ; Prepara la llamada al sistema para imprimir
    mov ebx, 1      ; Establece stdout como el descriptor de archivo
    mov ecx, mensaje   ; Carga la dirección de memoria del mensaje
    mov edx, len_mensaje   ; Carga la longitud del mensaje
    int 0x80        ; Realiza la llamada al sistema para imprimir en la salida estándar
    
    ;salto de linea para mostrar el resultado
    mov eax,4
    mov ebx,1
    mov ecx, linea
    mov edx,1
    int 0x80

    ; Imprimir el resultado
    mov eax, 4       ; Prepara la llamada al sistema para imprimir
    mov ebx, 1       ; Establece stdout como el descriptor de archivo
    mov ecx, resultado ; Carga la dirección de memoria de resultado
    mov edx, 2       ; Carga la longitud de los datos a imprimir
    int 0x80         ; Realiza la llamada al sistema para imprimir en la salida estándar

    ; Salir del programa
    mov eax, 1       ; Prepara la llamada al sistema para salir del programa
    mov ebx, 0       ; Establece un código de salida exitoso
    int 0x80         ; Realiza la llamada al sistema para finalizar el programa